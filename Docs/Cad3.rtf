{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}}{\colortbl;\red0\green0\blue0;
\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;
\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\widctlpar\adjustright 
\f2\fs20\cgrid \sbasedon0 \snext15 Plain Text;}}{\info{\title Required Resources}{\author ITM}{\operator ITM}{\creatim\yr2001\mo4\dy20\hr11\min7}{\revtim\yr2001\mo4\dy20\hr11\min7}{\version2}{\edmins0}{\nofpages4}{\nofwords567}{\nofchars3237}
{\*\company  }{\nofcharsws3975}{\vern71}}\margl1319\margr1319 \widowctrl\ftnbj\aenddoc\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}
{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}
{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9
\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s15\qc\nowidctlpar\widctlpar\adjustright \f2\fs20\cgrid {\b\fs48\ul Required Resources
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {
\par 
\par }{\fs32 By Todays Standards
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 Idealy a CAD software (for moderately complex 
\par designs) would require large display(>19 inches), 
\par with a high resolution and colour depth
\par (1600*1200*1.6 million)(low eye fatigue , 
\par radiations ), Large memory (>128 MB) and 
\par computational power (>500 Mflops) for a really 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 good Design capability.
\par 
\par 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 For our use, harware is to be selected to be 
\par easily availible and usable.. i.e information 
\par regarding use of harware and its programming
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 should be availible easily.
\par 
\par 
\par Display - 
\par 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 IBM PC provides with a standard EGA/VGA adaptor 
\par for graphics
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 with capabilities of
\par \tab \tab \tab 320*200*256
\par \tab \tab \tab and
\par \tab \tab \tab 640*480*16
\par 
\par (vga- vedio graphics array)
\par i.e xsize*ysize*colours
\par 
\par  Both the modes are near useless for a good CAD
\par 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 320*200*256 has too low a resolution with the need 
\par of aspect ratio correction as it does not match 
\par with general screen standard of 4:3.
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 640*480*16 has only 16 colours and is too slow in 
\par access, thus unfit for good representation to eye 
\par and rendering etc.
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 The New VESA (Vedio Electronics Standards 
\par Association) standard for high resolution 
\par SVGA(Super VGA) is today implemented in almost all
\par graphics cards on all PC's... provides with 
\par various modes depending on capability of 
\par hardware(Screen, Graphics card, Vram).
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 It may provide any desirable combimation of modes 
\par and colour depths
\par resolutions of 640*480 to ones exceeding 1600*1200 
\par at 8 to 24 bit colour depth.
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 To maintain compatibility to old system svga 
\par information is mapped into the old allotted 64KB 
\par memory area. Since svga information exceeds 64KB
\par the svga card has its memory divided in 64KB banks 
\par which are paged to the old area on request by 
\par program.
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 
\par Resolutions of 
\par \tab -\tab 640*480*1.6million
\par \tab -\tab 800*600*64000
\par \tab -\tab 1024*768*256
\par 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 utilise less than 1MB of ram and are compatible 
\par with most of the display devices . The last two 
\par modes are most widely supported, even over laptops
\par although larger no. of colours(24 bit) is very 
\par tempting in large variety of possible colours in 
\par the display(True Colour Mode).
\par }{\b\fs32\ul Graphics Adapter chosen \endash 
\par 
\par }{\fs32 Is Vga 320*200*256 mode suported by almost
\par All personal computer systems and the easiest
\par to program.
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 
\par }{\b\fs32\ul Input devices }{\b\fs32\ul -
\par }{\fs32 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 Keyboard and Mouse are the selected input devices 
\par as thier drivers are readily availible for  for 
\par most Operating Systems.
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 If another graphics device driver is found or 
\par device and driver is designed by me for serial 
\par port it shall be added too.
\par (like a 3D positionable robotic arm with mouse 
\par type click button for 3D data input)
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 
\par 
\par }{\b\fs32\ul Computer - 
\par }{\fs32 
\par INTEL, AMD based IBM PC Clones are very popular ,cheap , easily availible,
\par rich in literature with lots of operating systems and languages availible.
\par Thus this shall be the natural choice.
\par 
\par 
\par }{\b\fs32\ul Operating System -
\par }{\fs32 
\par Two most preffered OS's are
\par 
\par \tab MS DOS - (Real mode OS)
\par \tab MS WINDOWS9X - (Protected mode)
\par 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 PC's based on 386 and above have 2 modes Real and 
\par Protected.
\par In real mode access is limited to 1MB of ram ,
\par program can access anything.
\par In protected mode the OS decides if a program has 
\par the right to have access to any PC resource.
\par For Todays applications MS DOS provides too 
\par little, but then it gives great flexibility and 
\par provides with all information to access any 
\par hardware while windows requires device drivers 
\par etc. for which information is very hard to find, 
\par also windows demands heavily on system.
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 Thus MS DOS is chosen for initial development.
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 
\par 
\par }{\b\fs32\ul Language -
\par }{\fs32 (chosen Language = Turbo Pascal 7.0)
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\fs32 Several languages are  
\par \tab MS DOS  -> Turbo PASCAL, c/c++, Assembly
\par \tab Windows -> Delphi, VC/VC++, Win Assembly
\par 
\par C++ should chosen for following reasons
\par - Standardised to ANSI
\par - Logic part, i.e non system specific code can be shared over different
\par   systems
\par - Large amount of availible litrature
\par - Numerous good coding facilities ans structures
\par \tab >>Object oriented
\par \tab >>templates
\par \tab >>streams
\par \tab >>function,operator overloading
\par \tab >>libraries
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {
\par }}